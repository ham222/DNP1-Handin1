@page "/CreateUser"
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@using BlazorApp.Services
@inject IUserService userService;

<h3>You can register a new account here</h3>

<div class="card">
            <h3>Create User</h3>
            <div class="card">
                <div class="form-group field">
                    <div class="col-12">
                        <label>User name:</label>
                        <input type="text" @bind="username" @bind:event="oninput"/>
                        @if (!string.IsNullOrEmpty(resultMsg))
                        {
                            <label style="color: @color">@resultMsg</label>
                        }
                    </div>
                    <div class="col-12">
                        <label>Password:</label>
                        <input type="password" @bind="password" @bind:event="oninput"/>
                        @if (!string.IsNullOrEmpty(resultMsg))
                        {
                            <label style="color: @color">@resultMsg</label>
                        }
                    </div>
                </div>
            </div>
            <div class="button-row">
                <button @onclick="Create" disabled="@((string.IsNullOrEmpty(username)) || (string.IsNullOrEmpty(password)))" class="acceptbtn">Create</button>
            </div>
        </div>

@code {
    private string username = "";
    private string password = "";
    private string resultMsg = "";
    private string color = "";

    private async Task Create()
    {
        resultMsg = "";

        try
        {
            await userService.Create(new UserCreationDto(username, password));
            username = "";
            resultMsg = "User successfully created";
            color = "green";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }
}