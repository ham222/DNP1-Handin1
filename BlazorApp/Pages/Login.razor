@page "/Login"
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@using BlazorApp.Services
@inject IUserService userService;
@inject IAuthService authService
@inject NavigationManager navMgr


<AuthorizeView>
    <NotAuthorized>
       
        <div class="card">
            <h3>Please login</h3>
            <div class="field">
                <label>User name:</label>
                <input type="text" @bind="username"/>
            </div>
            <div class="field">
                <label style="text-align: center">Password:</label>
                <input type="password" @bind="password"/>
            </div>
            @if (!string.IsNullOrEmpty(errorLabel))
            {
                <div class="field">
                    <label style="color: red">
                        @errorLabel
                    </label>
                </div>
            }
            <div class="field">
                <button class="loginbtn" @onclick="LoginAsync">Log in</button>
            </div>
            <div class="col-12 card-footer">
                <div class="col-12"><h4>If you don't have an account, you can register <a href="CreateUser">here</a></h4></div>
            </div>
        </div>
        
    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Hello, @context.User.Identity!.Name</h3>
            <div class="card-footer"><button class="loginbtn" @onclick="LoginAsync">Log out</button></div>
            
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private string username = "";
    private string password = "";
    private string resultMsg = "";
    private string errorLabel = "";
    private string color = "";
    

    private async Task LoginAsync()
    {
        errorLabel = "";
        try
        {
            await authService.LoginAsync(username, password);
            navMgr.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }
    
    private async Task Logout()
    {
        await authService.LogoutAsync();
        navMgr.NavigateTo("/");
    }

}